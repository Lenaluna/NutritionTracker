/Users/flashayla/Library/Java/JavaVirtualMachines/corretto-17.0.14/Contents/Home/bin/java -ea -Didea.test.cyclic.buffer.size=1048576 -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=57783:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/flashayla/.m2/repository/org/junit/platform/junit-platform-launcher/1.11.4/junit-platform-launcher-1.11.4.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/flashayla/Projekte/IntelliJ/NutritionTracker/backend/target/test-classes:/Users/flashayla/Projekte/IntelliJ/NutritionTracker/backend/target/classes:/Users/flashayla/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.4.1/spring-boot-starter-data-jpa-3.4.1.jar:/Users/flashayla/.m2/repository/org/springframework/boot/spring-boot-starter/3.4.1/spring-boot-starter-3.4.1.jar:/Users/flashayla/.m2/repository/org/springframework/boot/spring-boot/3.4.1/spring-boot-3.4.1.jar:/Users/flashayla/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.4.1/spring-boot-autoconfigure-3.4.1.jar:/Users/flashayla/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/flashayla/.m2/repository/org/yaml/snakeyaml/2.3/snakeyaml-2.3.jar:/Users/flashayla/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.4.1/spring-boot-starter-jdbc-3.4.1.jar:/Users/flashayla/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/Users/flashayla/.m2/repository/org/springframework/spring-jdbc/6.2.1/spring-jdbc-6.2.1.jar:/Users/flashayla/.m2/repository/org/hibernate/orm/hibernate-core/6.6.4.Final/hibernate-core-6.6.4.Final.jar:/Users/flashayla/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/flashayla/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/flashayla/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/flashayla/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/flashayla/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/flashayla/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/flashayla/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/flashayla/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/flashayla/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/flashayla/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/flashayla/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/flashayla/.m2/repository/org/springframework/data/spring-data-jpa/3.4.1/spring-data-jpa-3.4.1.jar:/Users/flashayla/.m2/repository/org/springframework/data/spring-data-commons/3.4.1/spring-data-commons-3.4.1.jar:/Users/flashayla/.m2/repository/org/springframework/spring-orm/6.2.1/spring-orm-6.2.1.jar:/Users/flashayla/.m2/repository/org/springframework/spring-context/6.2.1/spring-context-6.2.1.jar:/Users/flashayla/.m2/repository/org/springframework/spring-aop/6.2.1/spring-aop-6.2.1.jar:/Users/flashayla/.m2/repository/org/springframework/spring-tx/6.2.1/spring-tx-6.2.1.jar:/Users/flashayla/.m2/repository/org/springframework/spring-beans/6.2.1/spring-beans-6.2.1.jar:/Users/flashayla/.m2/repository/org/springframework/spring-aspects/6.2.1/spring-aspects-6.2.1.jar:/Users/flashayla/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/Users/flashayla/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.4.1/spring-boot-starter-web-3.4.1.jar:/Users/flashayla/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.4.1/spring-boot-starter-json-3.4.1.jar:/Users/flashayla/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.2/jackson-databind-2.18.2.jar:/Users/flashayla/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.18.2/jackson-datatype-jdk8-2.18.2.jar:/Users/flashayla/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.18.2/jackson-module-parameter-names-2.18.2.jar:/Users/flashayla/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.4.1/spring-boot-starter-tomcat-3.4.1.jar:/Users/flashayla/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.34/tomcat-embed-core-10.1.34.jar:/Users/flashayla/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.34/tomcat-embed-el-10.1.34.jar:/Users/flashayla/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.34/tomcat-embed-websocket-10.1.34.jar:/Users/flashayla/.m2/repository/org/springframework/spring-web/6.2.1/spring-web-6.2.1.jar:/Users/flashayla/.m2/repository/io/micrometer/micrometer-observation/1.14.2/micrometer-observation-1.14.2.jar:/Users/flashayla/.m2/repository/io/micrometer/micrometer-commons/1.14.2/micrometer-commons-1.14.2.jar:/Users/flashayla/.m2/repository/org/springframework/spring-webmvc/6.2.1/spring-webmvc-6.2.1.jar:/Users/flashayla/.m2/repository/org/springframework/spring-expression/6.2.1/spring-expression-6.2.1.jar:/Users/flashayla/.m2/repository/org/slf4j/slf4j-simple/2.0.7/slf4j-simple-2.0.7.jar:/Users/flashayla/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/Users/flashayla/.m2/repository/org/postgresql/postgresql/42.7.4/postgresql-42.7.4.jar:/Users/flashayla/.m2/repository/org/checkerframework/checker-qual/3.42.0/checker-qual-3.42.0.jar:/Users/flashayla/.m2/repository/com/h2database/h2/2.3.232/h2-2.3.232.jar:/Users/flashayla/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/flashayla/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/flashayla/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/flashayla/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/flashayla/.m2/repository/org/glassfish/jakarta.el/4.0.2/jakarta.el-4.0.2.jar:/Users/flashayla/.m2/repository/jakarta/el/jakarta.el-api/4.0.0/jakarta.el-api-4.0.0.jar:/Users/flashayla/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.4.1/spring-boot-starter-logging-3.4.1.jar:/Users/flashayla/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.3/log4j-to-slf4j-2.24.3.jar:/Users/flashayla/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.3/log4j-api-2.24.3.jar:/Users/flashayla/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/Users/flashayla/.m2/repository/org/projectlombok/lombok-mapstruct-binding/0.2.0/lombok-mapstruct-binding-0.2.0.jar:/Users/flashayla/.m2/repository/org/projectlombok/lombok/1.18.36/lombok-1.18.36.jar:/Users/flashayla/.m2/repository/org/modelmapper/modelmapper/3.2.2/modelmapper-3.2.2.jar:/Users/flashayla/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.2.0/springdoc-openapi-starter-webmvc-ui-2.2.0.jar:/Users/flashayla/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.2.0/springdoc-openapi-starter-webmvc-api-2.2.0.jar:/Users/flashayla/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.2.0/springdoc-openapi-starter-common-2.2.0.jar:/Users/flashayla/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.15/swagger-core-jakarta-2.2.15.jar:/Users/flashayla/.m2/repository/org/apache/commons/commons-lang3/3.17.0/commons-lang3-3.17.0.jar:/Users/flashayla/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.15/swagger-annotations-jakarta-2.2.15.jar:/Users/flashayla/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.15/swagger-models-jakarta-2.2.15.jar:/Users/flashayla/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.18.2/jackson-dataformat-yaml-2.18.2.jar:/Users/flashayla/.m2/repository/org/webjars/swagger-ui/5.2.0/swagger-ui-5.2.0.jar:/Users/flashayla/.m2/repository/net/minidev/json-smart/2.4.10/json-smart-2.4.10.jar:/Users/flashayla/.m2/repository/net/minidev/accessors-smart/2.4.9/accessors-smart-2.4.9.jar:/Users/flashayla/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/flashayla/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.4.1/spring-boot-starter-test-3.4.1.jar:/Users/flashayla/.m2/repository/org/springframework/boot/spring-boot-test/3.4.1/spring-boot-test-3.4.1.jar:/Users/flashayla/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.4.1/spring-boot-test-autoconfigure-3.4.1.jar:/Users/flashayla/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/flashayla/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/flashayla/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/flashayla/.m2/repository/org/assertj/assertj-core/3.26.3/assertj-core-3.26.3.jar:/Users/flashayla/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/Users/flashayla/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/flashayla/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/flashayla/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/flashayla/.m2/repository/org/springframework/spring-core/6.2.1/spring-core-6.2.1.jar:/Users/flashayla/.m2/repository/org/springframework/spring-jcl/6.2.1/spring-jcl-6.2.1.jar:/Users/flashayla/.m2/repository/org/springframework/spring-test/6.2.1/spring-test-6.2.1.jar:/Users/flashayla/.m2/repository/org/xmlunit/xmlunit-core/2.10.0/xmlunit-core-2.10.0.jar:/Users/flashayla/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.0/junit-jupiter-5.10.0.jar:/Users/flashayla/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.4/junit-jupiter-api-5.11.4.jar:/Users/flashayla/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/flashayla/.m2/repository/org/junit/platform/junit-platform-commons/1.11.4/junit-platform-commons-1.11.4.jar:/Users/flashayla/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/flashayla/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.4/junit-jupiter-params-5.11.4.jar:/Users/flashayla/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.4/junit-jupiter-engine-5.11.4.jar:/Users/flashayla/.m2/repository/org/junit/platform/junit-platform-engine/1.11.4/junit-platform-engine-1.11.4.jar:/Users/flashayla/.m2/repository/org/mockito/mockito-core/5.5.0/mockito-core-5.5.0.jar:/Users/flashayla/.m2/repository/net/bytebuddy/byte-buddy/1.15.11/byte-buddy-1.15.11.jar:/Users/flashayla/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.11/byte-buddy-agent-1.15.11.jar:/Users/flashayla/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/flashayla/.m2/repository/org/mockito/mockito-junit-jupiter/5.5.0/mockito-junit-jupiter-5.5.0.jar:/Users/flashayla/.m2/repository/org/flywaydb/flyway-core/10.20.1/flyway-core-10.20.1.jar:/Users/flashayla/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-toml/2.18.2/jackson-dataformat-toml-2.18.2.jar:/Users/flashayla/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.2/jackson-core-2.18.2.jar:/Users/flashayla/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.18.2/jackson-datatype-jsr310-2.18.2.jar:/Users/flashayla/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.2/jackson-annotations-2.18.2.jar com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.example.NutritionTracker.integration.FoodItemIntegrationTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

[background-preinit] INFO org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Starting FoodItemIntegrationTest using Java 17.0.14 with PID 23450 (started by flashayla in /Users/flashayla/Projekte/IntelliJ/NutritionTracker/backend)
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - The following 1 profile is active: "test"
[main] INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[main] INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 4 JPA repository interfaces.
[main] INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
[main] INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 659 ms
[main] INFO com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
[main] INFO com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:nutrition_test user=SA
[main] INFO com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
[main] INFO org.flywaydb.core.FlywayExecutor - Database: jdbc:h2:mem:nutrition_test (H2 2.3)
[main] WARN org.flywaydb.core.internal.database.base.Database - Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
[main] INFO org.flywaydb.core.internal.schemahistory.JdbcTableSchemaHistory - Schema history table "PUBLIC"."flyway_schema_history" does not exist yet
[main] INFO org.flywaydb.core.internal.command.DbValidate - Successfully validated 0 migrations (execution time 00:00.002s)
[main] WARN org.flywaydb.core.internal.command.DbValidate - No migrations found. Are your locations set up correctly?
[main] INFO org.flywaydb.core.internal.schemahistory.JdbcTableSchemaHistory - Creating Schema History table "PUBLIC"."flyway_schema_history" ...
[main] INFO org.flywaydb.core.internal.command.DbMigrate - Current version of schema "PUBLIC": << Empty Schema >>
[main] INFO org.flywaydb.core.internal.command.DbMigrate - Schema "PUBLIC" is up to date. No migration necessary.
[main] INFO org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[main] INFO org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.4.Final
[main] INFO org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
[main] INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
[main] WARN org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[main] INFO org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[main] INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate:
    drop table if exists app_user cascade
Hibernate:
    drop table if exists food_item cascade
Hibernate:
    drop table if exists food_item_amino_acid_profile cascade
Hibernate:
    drop table if exists nutrition_log_food_items cascade
Hibernate:
    drop table if exists nutrition_log cascade
Hibernate:
    create table app_user (
        age integer check ((age<=150) and (age>=0)),
        is_athlete boolean,
        weight float(53) check ((weight<=500) and (weight>=1)),
        version bigint,
        id uuid not null,
        name varchar(50) not null,
        primary key (id)
    )
Hibernate:
    create table food_item (
        version bigint,
        id uuid not null,
        name varchar(255),
        primary key (id)
    )
Hibernate:
    create table food_item_amino_acid_profile (
        amino_acid_profile float(53),
        food_item_id uuid not null,
        amino_acid_profile_key varchar(255) not null,
        primary key (food_item_id, amino_acid_profile_key)
    )
Hibernate:
    create table nutrition_log_food_items (
        id bigint generated by default as identity,
        version bigint,
        food_item_id uuid not null,
        nutrition_log_id uuid not null,
        primary key (id)
    )
Hibernate:
    create table nutrition_log (
        log_date_time timestamp(6),
        version bigint,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
Hibernate:
    alter table if exists food_item_amino_acid_profile
       add constraint FK617l4sh07ncn7juw9lhhfyyjr
       foreign key (food_item_id)
       references food_item
Hibernate:
    alter table if exists nutrition_log_food_items
       add constraint FK3lakl8rl7dkx8552chnj2qgvh
       foreign key (food_item_id)
       references food_item
Hibernate:
    alter table if exists nutrition_log_food_items
       add constraint FKgsm6ni0dmm0oibqff1jwfivo2
       foreign key (nutrition_log_id)
       references nutrition_log
Hibernate:
    alter table if exists nutrition_log
       add constraint FK3mdj2ojxud2bjr89e0xowhtqe
       foreign key (user_id)
       references app_user
[main] INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[main] WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[main] INFO org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
[main] INFO org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
[main] INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 57788 (http) with context path '/'
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Started FoodItemIntegrationTest in 2.345 seconds (process running for 2.738)
[main] INFO com.example.NutritionTracker.config.StartupRunner - Application startup completed.
OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
Hibernate:
    select
        nl1_0.id,
        nl1_0.log_date_time,
        nl1_0.user_id,
        nl1_0.version
    from
        nutrition_log nl1_0
Hibernate:
    select
        fi1_0.id,
        fi1_0.name,
        fi1_0.version
    from
        food_item fi1_0
Hibernate:
    select
        nlfi1_0.id,
        nlfi1_0.food_item_id,
        nlfi1_0.nutrition_log_id,
        nlfi1_0.version
    from
        nutrition_log_food_items nlfi1_0
Hibernate:
    select
        u1_0.id,
        u1_0.age,
        u1_0.is_athlete,
        u1_0.name,
        u1_0.version,
        u1_0.weight
    from
        app_user u1_0
Hibernate:
    select
        u1_0.id,
        u1_0.age,
        u1_0.is_athlete,
        u1_0.name,
        u1_0.version,
        u1_0.weight
    from
        app_user u1_0
Hibernate:
    select
        fi1_0.id,
        fi1_0.name,
        fi1_0.version
    from
        food_item fi1_0
Hibernate:
    select
        nl1_0.id,
        nl1_0.log_date_time,
        nl1_0.user_id,
        nl1_0.version
    from
        nutrition_log nl1_0
Hibernate:
    select
        nlfi1_0.id,
        nlfi1_0.food_item_id,
        nlfi1_0.nutrition_log_id,
        nlfi1_0.version
    from
        nutrition_log_food_items nlfi1_0
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Starte setUp() für den Test...
Hibernate:
    select
        u1_0.id,
        u1_0.age,
        u1_0.is_athlete,
        u1_0.name,
        u1_0.version,
        u1_0.weight
    from
        app_user u1_0
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Vorhandene Benutzer in der Datenbank: []
Hibernate:
    select
        fi1_0.id,
        fi1_0.name,
        fi1_0.version
    from
        food_item fi1_0
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Vorhandene FoodItems in der Datenbank: []
Hibernate:
    select
        nl1_0.id,
        nl1_0.log_date_time,
        nl1_0.user_id,
        nl1_0.version
    from
        nutrition_log nl1_0
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Vorhandene NutritionLogs in der Datenbank: []
Hibernate:
    select
        nlfi1_0.id,
        nlfi1_0.food_item_id,
        nlfi1_0.nutrition_log_id,
        nlfi1_0.version
    from
        nutrition_log_food_items nlfi1_0
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Vorhandene NutritionLogFoodItems in der Datenbank: []
Hibernate:
    select
        nlfi1_0.id,
        nlfi1_0.food_item_id,
        nlfi1_0.nutrition_log_id,
        nlfi1_0.version
    from
        nutrition_log_food_items nlfi1_0
Hibernate:
    select
        fi1_0.id,
        fi1_0.name,
        fi1_0.version
    from
        food_item fi1_0
Hibernate:
    insert
    into
        app_user
        (age, is_athlete, name, version, weight, id)
    values
        (?, ?, ?, ?, ?, ?)
Hibernate:
    select
        nl1_0.id,
        nl1_0.log_date_time,
        nl1_0.user_id,
        nl1_0.version
    from
        nutrition_log nl1_0
Hibernate:
    select
        u1_0.id,
        u1_0.age,
        u1_0.is_athlete,
        u1_0.name,
        u1_0.version,
        u1_0.weight
    from
        app_user u1_0

org.springframework.dao.DataIntegrityViolationException: Detached entity with generated id 'a4169ae7-4bdd-4f6b-87fa-ac90ee8725b1' has an uninitialized version value 'null': com.example.NutritionTracker.entity.FoodItem.version

	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:307)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy156.saveAll(Unknown Source)
	at com.example.NutritionTracker.integration.FoodItemIntegrationTest.setUp(FoodItemIntegrationTest.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
Caused by: org.hibernate.PropertyValueException: Detached entity with generated id 'a4169ae7-4bdd-4f6b-87fa-ac90ee8725b1' has an uninitialized version value 'null': com.example.NutritionTracker.entity.FoodItem.version
	at org.hibernate.persister.entity.AbstractEntityPersister.isTransient(AbstractEntityPersister.java:4307)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:316)
	at org.hibernate.event.internal.EntityState.getEntityState(EntityState.java:64)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityState(DefaultPersistEventListener.java:114)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:87)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:79)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:761)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:745)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)
	at jdk.proxy2/jdk.proxy2.$Proxy151.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:627)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAll(SimpleJpaRepository.java:653)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:752)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	... 9 more

Hibernate:
    select
        nl1_0.id,
        nl1_0.log_date_time,
        nl1_0.user_id,
        nl1_0.version
    from
        nutrition_log nl1_0
Hibernate:
    select
        fi1_0.id,
        fi1_0.name,
        fi1_0.version
    from
        food_item fi1_0
Hibernate:
    select
        nlfi1_0.id,
        nlfi1_0.food_item_id,
        nlfi1_0.nutrition_log_id,
        nlfi1_0.version
    from
        nutrition_log_food_items nlfi1_0
Hibernate:
    select
        u1_0.id,
        u1_0.age,
        u1_0.is_athlete,
        u1_0.name,
        u1_0.version,
        u1_0.weight
    from
        app_user u1_0
Hibernate:
    select
        u1_0.id,
        u1_0.age,
        u1_0.is_athlete,
        u1_0.name,
        u1_0.version,
        u1_0.weight
    from
        app_user u1_0
Hibernate:
    select
        fi1_0.id,
        fi1_0.name,
        fi1_0.version
    from
        food_item fi1_0
Hibernate:
    select
        nl1_0.id,
        nl1_0.log_date_time,
        nl1_0.user_id,
        nl1_0.version
    from
        nutrition_log nl1_0
Hibernate:
    select
        nlfi1_0.id,
        nlfi1_0.food_item_id,
        nlfi1_0.nutrition_log_id,
        nlfi1_0.version
    from
        nutrition_log_food_items nlfi1_0
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Starte setUp() für den Test...
Hibernate:
    select
        u1_0.id,
        u1_0.age,
        u1_0.is_athlete,
        u1_0.name,
        u1_0.version,
        u1_0.weight
    from
        app_user u1_0
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Vorhandene Benutzer in der Datenbank: []
Hibernate:
    select
        fi1_0.id,
        fi1_0.name,
        fi1_0.version
    from
        food_item fi1_0
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Vorhandene FoodItems in der Datenbank: []
Hibernate:
    select
        nl1_0.id,
        nl1_0.log_date_time,
        nl1_0.user_id,
        nl1_0.version
    from
        nutrition_log nl1_0
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Vorhandene NutritionLogs in der Datenbank: []
Hibernate:
    select
        nlfi1_0.id,
        nlfi1_0.food_item_id,
        nlfi1_0.nutrition_log_id,
        nlfi1_0.version
    from
        nutrition_log_food_items nlfi1_0
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Vorhandene NutritionLogFoodItems in der Datenbank: []
Hibernate:
    select
        nlfi1_0.id,
        nlfi1_0.food_item_id,
        nlfi1_0.nutrition_log_id,
        nlfi1_0.version
    from
        nutrition_log_food_items nlfi1_0
Hibernate:
    select
        fi1_0.id,
        fi1_0.name,
        fi1_0.version
    from
        food_item fi1_0
Hibernate:
    insert
    into
        app_user
        (age, is_athlete, name, version, weight, id)
    values
        (?, ?, ?, ?, ?, ?)
Hibernate:
    select
        nl1_0.id,
        nl1_0.log_date_time,
        nl1_0.user_id,
        nl1_0.version
    from
        nutrition_log nl1_0
Hibernate:
    select
        u1_0.id,
        u1_0.age,
        u1_0.is_athlete,
        u1_0.name,
        u1_0.version,
        u1_0.weight
    from
        app_user u1_0

org.springframework.dao.DataIntegrityViolationException: Detached entity with generated id 'd0498722-558f-4f50-b0f3-2dc4faff1b99' has an uninitialized version value 'null': com.example.NutritionTracker.entity.FoodItem.version

	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:307)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy156.saveAll(Unknown Source)
	at com.example.NutritionTracker.integration.FoodItemIntegrationTest.setUp(FoodItemIntegrationTest.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
Caused by: org.hibernate.PropertyValueException: Detached entity with generated id 'd0498722-558f-4f50-b0f3-2dc4faff1b99' has an uninitialized version value 'null': com.example.NutritionTracker.entity.FoodItem.version
	at org.hibernate.persister.entity.AbstractEntityPersister.isTransient(AbstractEntityPersister.java:4307)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:316)
	at org.hibernate.event.internal.EntityState.getEntityState(EntityState.java:64)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityState(DefaultPersistEventListener.java:114)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:87)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:79)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:761)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:745)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)
	at jdk.proxy2/jdk.proxy2.$Proxy151.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:627)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAll(SimpleJpaRepository.java:653)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:752)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	... 9 more

Hibernate:
    select
        nl1_0.id,
        nl1_0.log_date_time,
        nl1_0.user_id,
        nl1_0.version
    from
        nutrition_log nl1_0
Hibernate:
    select
        fi1_0.id,
        fi1_0.name,
        fi1_0.version
    from
        food_item fi1_0
Hibernate:
    select
        nlfi1_0.id,
        nlfi1_0.food_item_id,
        nlfi1_0.nutrition_log_id,
        nlfi1_0.version
    from
        nutrition_log_food_items nlfi1_0
Hibernate:
    select
        u1_0.id,
        u1_0.age,
        u1_0.is_athlete,
        u1_0.name,
        u1_0.version,
        u1_0.weight
    from
        app_user u1_0
Hibernate:
    select
        u1_0.id,
        u1_0.age,
        u1_0.is_athlete,
        u1_0.name,
        u1_0.version,
        u1_0.weight
    from
        app_user u1_0
Hibernate:
    select
        fi1_0.id,
        fi1_0.name,
        fi1_0.version
    from
        food_item fi1_0
Hibernate:
    select
        nl1_0.id,
        nl1_0.log_date_time,
        nl1_0.user_id,
        nl1_0.version
    from
        nutrition_log nl1_0
Hibernate:
    select
        nlfi1_0.id,
        nlfi1_0.food_item_id,
        nlfi1_0.nutrition_log_id,
        nlfi1_0.version
    from
        nutrition_log_food_items nlfi1_0
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Starte setUp() für den Test...
Hibernate:
    select
        u1_0.id,
        u1_0.age,
        u1_0.is_athlete,
        u1_0.name,
        u1_0.version,
        u1_0.weight
    from
        app_user u1_0
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Vorhandene Benutzer in der Datenbank: []
Hibernate:
    select
        fi1_0.id,
        fi1_0.name,
        fi1_0.version
    from
        food_item fi1_0
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Vorhandene FoodItems in der Datenbank: []
Hibernate:
    select
        nl1_0.id,
        nl1_0.log_date_time,
        nl1_0.user_id,
        nl1_0.version
    from
        nutrition_log nl1_0
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Vorhandene NutritionLogs in der Datenbank: []
Hibernate:
    select
        nlfi1_0.id,
        nlfi1_0.food_item_id,
        nlfi1_0.nutrition_log_id,
        nlfi1_0.version
    from
        nutrition_log_food_items nlfi1_0
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Vorhandene NutritionLogFoodItems in der Datenbank: []
Hibernate:
    select
        nlfi1_0.id,
        nlfi1_0.food_item_id,
        nlfi1_0.nutrition_log_id,
        nlfi1_0.version
    from
        nutrition_log_food_items nlfi1_0
Hibernate:
    select
        fi1_0.id,
        fi1_0.name,
        fi1_0.version
    from
        food_item fi1_0
Hibernate:
    insert
    into
        app_user
        (age, is_athlete, name, version, weight, id)
    values
        (?, ?, ?, ?, ?, ?)
Hibernate:
    select
        nl1_0.id,
        nl1_0.log_date_time,
        nl1_0.user_id,
        nl1_0.version
    from
        nutrition_log nl1_0
Hibernate:
    select
        u1_0.id,
        u1_0.age,
        u1_0.is_athlete,
        u1_0.name,
        u1_0.version,
        u1_0.weight
    from
        app_user u1_0

org.springframework.dao.DataIntegrityViolationException: Detached entity with generated id 'e8653877-1ea8-4d86-8e4b-97682d91fc80' has an uninitialized version value 'null': com.example.NutritionTracker.entity.FoodItem.version

	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:307)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy156.saveAll(Unknown Source)
	at com.example.NutritionTracker.integration.FoodItemIntegrationTest.setUp(FoodItemIntegrationTest.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
Caused by: org.hibernate.PropertyValueException: Detached entity with generated id 'e8653877-1ea8-4d86-8e4b-97682d91fc80' has an uninitialized version value 'null': com.example.NutritionTracker.entity.FoodItem.version
	at org.hibernate.persister.entity.AbstractEntityPersister.isTransient(AbstractEntityPersister.java:4307)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:316)
	at org.hibernate.event.internal.EntityState.getEntityState(EntityState.java:64)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityState(DefaultPersistEventListener.java:114)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:87)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:79)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:761)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:745)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)
	at jdk.proxy2/jdk.proxy2.$Proxy151.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:627)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAll(SimpleJpaRepository.java:653)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:752)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	... 9 more

Hibernate:
    select
        nl1_0.id,
        nl1_0.log_date_time,
        nl1_0.user_id,
        nl1_0.version
    from
        nutrition_log nl1_0
Hibernate:
    select
        fi1_0.id,
        fi1_0.name,
        fi1_0.version
    from
        food_item fi1_0
Hibernate:
    select
        nlfi1_0.id,
        nlfi1_0.food_item_id,
        nlfi1_0.nutrition_log_id,
        nlfi1_0.version
    from
        nutrition_log_food_items nlfi1_0
Hibernate:
    select
        u1_0.id,
        u1_0.age,
        u1_0.is_athlete,
        u1_0.name,
        u1_0.version,
        u1_0.weight
    from
        app_user u1_0
Hibernate:
    select
        u1_0.id,
        u1_0.age,
        u1_0.is_athlete,
        u1_0.name,
        u1_0.version,
        u1_0.weight
    from
        app_user u1_0
Hibernate:
    select
        fi1_0.id,
        fi1_0.name,
        fi1_0.version
    from
        food_item fi1_0
Hibernate:
    select
        nl1_0.id,
        nl1_0.log_date_time,
        nl1_0.user_id,
        nl1_0.version
    from
        nutrition_log nl1_0
Hibernate:
    select
        nlfi1_0.id,
        nlfi1_0.food_item_id,
        nlfi1_0.nutrition_log_id,
        nlfi1_0.version
    from
        nutrition_log_food_items nlfi1_0
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Starte setUp() für den Test...
Hibernate:
    select
        u1_0.id,
        u1_0.age,
        u1_0.is_athlete,
        u1_0.name,
        u1_0.version,
        u1_0.weight
    from
        app_user u1_0
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Vorhandene Benutzer in der Datenbank: []
Hibernate:
    select
        fi1_0.id,
        fi1_0.name,
        fi1_0.version
    from
        food_item fi1_0
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Vorhandene FoodItems in der Datenbank: []
Hibernate:
    select
        nl1_0.id,
        nl1_0.log_date_time,
        nl1_0.user_id,
        nl1_0.version
    from
        nutrition_log nl1_0
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Vorhandene NutritionLogs in der Datenbank: []
Hibernate:
    select
        nlfi1_0.id,
        nlfi1_0.food_item_id,
        nlfi1_0.nutrition_log_id,
        nlfi1_0.version
    from
        nutrition_log_food_items nlfi1_0
[main] INFO com.example.NutritionTracker.integration.FoodItemIntegrationTest - Vorhandene NutritionLogFoodItems in der Datenbank: []
Hibernate:
    select
        nlfi1_0.id,
        nlfi1_0.food_item_id,
        nlfi1_0.nutrition_log_id,
        nlfi1_0.version
    from
        nutrition_log_food_items nlfi1_0
Hibernate:
    select
        fi1_0.id,
        fi1_0.name,
        fi1_0.version
    from
        food_item fi1_0
Hibernate:
    insert
    into
        app_user
        (age, is_athlete, name, version, weight, id)
    values
        (?, ?, ?, ?, ?, ?)
Hibernate:
    select
        nl1_0.id,
        nl1_0.log_date_time,
        nl1_0.user_id,
        nl1_0.version
    from
        nutrition_log nl1_0
Hibernate:
    select
        u1_0.id,
        u1_0.age,
        u1_0.is_athlete,
        u1_0.name,
        u1_0.version,
        u1_0.weight
    from
        app_user u1_0

org.springframework.dao.DataIntegrityViolationException: Detached entity with generated id '5702e1b4-ea41-4077-afe9-e5966258b513' has an uninitialized version value 'null': com.example.NutritionTracker.entity.FoodItem.version

	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:307)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy156.saveAll(Unknown Source)
	at com.example.NutritionTracker.integration.FoodItemIntegrationTest.setUp(FoodItemIntegrationTest.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
Caused by: org.hibernate.PropertyValueException: Detached entity with generated id '5702e1b4-ea41-4077-afe9-e5966258b513' has an uninitialized version value 'null': com.example.NutritionTracker.entity.FoodItem.version
	at org.hibernate.persister.entity.AbstractEntityPersister.isTransient(AbstractEntityPersister.java:4307)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:316)
	at org.hibernate.event.internal.EntityState.getEntityState(EntityState.java:64)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityState(DefaultPersistEventListener.java:114)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:87)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:79)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:761)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:745)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)
	at jdk.proxy2/jdk.proxy2.$Proxy151.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:627)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAll(SimpleJpaRepository.java:653)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:752)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	... 9 more

[SpringApplicationShutdownHook] INFO org.springframework.boot.web.embedded.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
[tomcat-shutdown] INFO org.springframework.boot.web.embedded.tomcat.GracefulShutdown - Graceful shutdown complete
[SpringApplicationShutdownHook] INFO com.example.NutritionTracker.service.UserService - Cleaning up database before shutdown...
Hibernate: 
    select
        u1_0.id,
        u1_0.age,
        u1_0.is_athlete,
        u1_0.name,
        u1_0.version,
        u1_0.weight 
    from
        app_user u1_0
[SpringApplicationShutdownHook] INFO com.example.NutritionTracker.service.UserService - All users deleted.
[SpringApplicationShutdownHook] INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
Hibernate: 
    drop table if exists app_user cascade 
Hibernate: 
    drop table if exists food_item cascade 
Hibernate: 
    drop table if exists food_item_amino_acid_profile cascade 
Hibernate: 
    drop table if exists nutrition_log_food_items cascade 
Hibernate: 
    drop table if exists nutrition_log cascade 
[SpringApplicationShutdownHook] INFO com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
[SpringApplicationShutdownHook] INFO com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.

Process finished with exit code 255
